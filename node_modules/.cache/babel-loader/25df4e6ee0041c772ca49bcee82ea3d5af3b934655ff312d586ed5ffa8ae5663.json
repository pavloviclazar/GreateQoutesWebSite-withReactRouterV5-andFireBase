{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Documents/greatQuotes-withReactRouter/src/pages/AllQuotes.js\",\n  _s = $RefreshSig$();\nimport { useEffect } from \"react\";\nimport QuoteList from \"../components/quotes/QuoteList\";\nimport LoadingSpinner from \"../components/UI/LoadingSpinner\";\nimport NoQuotesFound from \"../components/quotes/NoQuotesFound\";\nimport useHttp from \"../hooks/use-http\";\nimport { getAllQuotes } from \"../lib/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AllQuotes = () => {\n  _s();\n  const {\n    sendRequest,\n    status,\n    data: loadedQuotes,\n    error\n  } = useHttp(getAllQuotes, true);\n  useEffect(() => {\n    sendRequest();\n  }, [sendRequest]);\n  if (status === \"pending\") {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"centered\",\n      children: /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"centered focused\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 12\n    }, this);\n  }\n  if (status === \"completed\" && (!loadedQuotes || loadedQuotes.lenght === 0)) {\n    return /*#__PURE__*/_jsxDEV(NoQuotesFound, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(QuoteList, {\n    quotes: loadedQuotes\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 10\n  }, this);\n};\n_s(AllQuotes, \"TX91E3Ry29pOjGA3Az87eReX9Xs=\", false, function () {\n  return [useHttp];\n});\n_c = AllQuotes;\nexport default AllQuotes;\nvar _c;\n$RefreshReg$(_c, \"AllQuotes\");","map":{"version":3,"names":["useEffect","QuoteList","LoadingSpinner","NoQuotesFound","useHttp","getAllQuotes","AllQuotes","sendRequest","status","data","loadedQuotes","error","lenght"],"sources":["/Users/mac/Documents/greatQuotes-withReactRouter/src/pages/AllQuotes.js"],"sourcesContent":["import { useEffect } from \"react\";\n\nimport QuoteList from \"../components/quotes/QuoteList\";\nimport LoadingSpinner from \"../components/UI/LoadingSpinner\";\nimport NoQuotesFound from \"../components/quotes/NoQuotesFound\";\nimport useHttp from \"../hooks/use-http\";\nimport { getAllQuotes } from \"../lib/api\";\n\nconst AllQuotes = () => {\n  const { sendRequest, status, data: loadedQuotes, error } = useHttp(\n    getAllQuotes,\n    true\n  );\n\n  useEffect(() => {\n    sendRequest();\n  }, [sendRequest]);\n\n  if (status === \"pending\") {\n    return (\n      <div className=\"centered\">\n        <LoadingSpinner />\n      </div>\n    );\n  }\n\n  if (error) {\n    return <p className=\"centered focused\">{error}</p>;\n  }\n\n  if (status === \"completed\" && (!loadedQuotes || loadedQuotes.lenght === 0)) {\n    return <NoQuotesFound />;\n  }\n\n  return <QuoteList quotes={loadedQuotes} />;\n};\n\nexport default AllQuotes;\n"],"mappings":";;AAAA,SAASA,SAAS,QAAQ,OAAO;AAEjC,OAAOC,SAAS,MAAM,gCAAgC;AACtD,OAAOC,cAAc,MAAM,iCAAiC;AAC5D,OAAOC,aAAa,MAAM,oCAAoC;AAC9D,OAAOC,OAAO,MAAM,mBAAmB;AACvC,SAASC,YAAY,QAAQ,YAAY;AAAC;AAE1C,MAAMC,SAAS,GAAG,MAAM;EAAA;EACtB,MAAM;IAAEC,WAAW;IAAEC,MAAM;IAAEC,IAAI,EAAEC,YAAY;IAAEC;EAAM,CAAC,GAAGP,OAAO,CAChEC,YAAY,EACZ,IAAI,CACL;EAEDL,SAAS,CAAC,MAAM;IACdO,WAAW,EAAE;EACf,CAAC,EAAE,CAACA,WAAW,CAAC,CAAC;EAEjB,IAAIC,MAAM,KAAK,SAAS,EAAE;IACxB,oBACE;MAAK,SAAS,EAAC,UAAU;MAAA,uBACvB,QAAC,cAAc;QAAA;QAAA;QAAA;MAAA;IAAG;MAAA;MAAA;MAAA;IAAA,QACd;EAEV;EAEA,IAAIG,KAAK,EAAE;IACT,oBAAO;MAAG,SAAS,EAAC,kBAAkB;MAAA,UAAEA;IAAK;MAAA;MAAA;MAAA;IAAA,QAAK;EACpD;EAEA,IAAIH,MAAM,KAAK,WAAW,KAAK,CAACE,YAAY,IAAIA,YAAY,CAACE,MAAM,KAAK,CAAC,CAAC,EAAE;IAC1E,oBAAO,QAAC,aAAa;MAAA;MAAA;MAAA;IAAA,QAAG;EAC1B;EAEA,oBAAO,QAAC,SAAS;IAAC,MAAM,EAAEF;EAAa;IAAA;IAAA;IAAA;EAAA,QAAG;AAC5C,CAAC;AAAC,GA3BIJ,SAAS;EAAA,QAC8CF,OAAO;AAAA;AAAA,KAD9DE,SAAS;AA6Bf,eAAeA,SAAS;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}